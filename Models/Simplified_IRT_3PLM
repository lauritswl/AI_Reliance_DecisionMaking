########################################################
### JAGS code for First Stage of Advice Taking Model ###
###                Defining model:                   ###
########################################################

# Loops are indexed by the following variables
# NO(o) --> Number of observations, index by [o], defined as all combinations of NI and NS
# NS(i) --> Number of participants, indexed by [i]
# NI(j) --> Number of images, indexed by [j], defined as combinations of all NN and NL.
# NN(n) --> Number of noise types, indexed by [n]
# NL(l)  --> Number of Labels, indexed by [l]

model{

  #################################
  ###        1. Priors:          ###
  #################################

  ### Item (j) priors:
  for (j in 1:NI) {
    d[j] ~ dunif(-4, 4)                     # Difficulty
    s[j] ~ dnorm(1, 1)T(0,)                 # Discrimination
  }                                         # Exit item j

  ### Participant (i) priors:
  for (i in 1:NS) {
    a[i] ~ dnorm(0, 2)                            # Ability
  }                                        # Exit participant i

  alpha_sd ~ dnorm(10, 1)

  #################################
  ### 2. Causal Model for AI:    ###
  #################################
  for (o in 1:NO) {
    ### Define theta for human decisions:
    logoddstheta[o] <- s[jid[o]] * (a[iid[o]] - d[jid[o]])
    theta[o] <- 1 / (1 + exp(-logoddstheta[o]))
    
    for (l in 1:NL) {
      dlbl[o,l] <- ifelse(z[o] == l, theta[o], (1-theta[o])/(NL-1))
    } # exit label l
    
    ### Define AI assisted choice:
    for (ai in 1:NAI) {
      ai_theta[o, ai] ~ dbeta(2,2)T(0.001,0.999)
      alpha[o, ai] ~ dbeta(alpha_sd*ai_theta[o, ai], alpha_sd*theta[o])T(0.001,0.999)
      probs_correct[o, ai] <- theta[o]*(1-alpha[o, ai]) + alpha[o, ai]*ai_theta[o, ai]
      for (l in 1:NL) {
        dlblHumAI[o, l, ai] <- ifelse(z[o] == l, probs_correct[o, ai], (1-probs_correct[o, ai])/(NL-1))
        dlblAI[o, l, ai] <- ifelse(z[o] == l, ai_theta[o, ai], (1-ai_theta[o, ai])/(NL-1))
        } # exit label l                                                                          
      } # exit AI-model ai 

    ### Define AI-assisted decision probabilities:

    #################################
    ### 3. Update Likelihoods:     ###
    #################################

    ### Likelihood for human-only decisions:
    lbl[o] ~ dcat(dlbl[o, 1:NL])
    pst_lbl[o] ~  dcat(dlbl[o, 1:NL]) # Sample a posterior label from label distribution    
    
    for (ai in 1:NAI) {
    ### Likelihood for AI-assisted decisions:
      ai_lbl[o, ai] ~ dcat(dlblAI[o, 1:NL, ai]) # fit to label
      ai_hum_lbl[o, ai] ~ dcat(dlblHumAI[o, 1:NL, ai]) # fit to label
      pst_ai_lbl[o, ai] ~ dcat(dlblHumAI[o, 1:NL, ai]) # Sample a posterior label from label distribution
      } # exit AI-model ai
  } # exit observations, o
} # exit model

################################################################################
###                    DICTIONARY FOR TERM EXPLANATION:                      ###
################################################################################

### Input data: ###
#    NO          Number of observations, index by [o], defined as all combinations of NI and NS
#    NS          Number of participants, indexed by [i]
#    NI          Number of images, indexed by [j], defined as combinations of all NN and NL
#    NN          Number of noise types, indexed by [n]
#    NAI         Number of AIs
#    NL          Number of Labels, indexed by [l]
#    jid(o)      Item index for observation o
#    iid(o)      Participant index for observation o
#    z(o)        True label for observation o
#    lbl(o)      Label in the no-advice condition (Human Prediction)
#    ai_lbl[o, ai]   Label in the advice condition, for observation o given the AI model
#    ai_hum_lbl[o, ai] Label in the advice condition, for observation o given the AI model

### Key Latent Parameters returned by model: ###
#    a[i]        ability participant i 
#    alpha[i]    AI reliance participant i
#    s[j]        discrimination parameter item j
#    d[j]        difficulty item j
#    theta[o]    correct observation skill in o
#    p_correct[o] prob correct observation (o) for model
#    pst_lbl[o]  sampled distribution from posterior lbl choice distribution
